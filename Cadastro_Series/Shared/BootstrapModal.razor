
<div class="modal @ModalClass" tabindex="-1" role="none" style="display:@ModalDisplay">
    <div class="modal-dialog" role="document">
        <div class="modal-content">

            <div class="modal-header col-12">
                <div class="container">
                    @if(Categoria == 1)
                    {
                        <h5 class="text-center"><b>Editar</b></h5>
                    }
                    else
                    {
                        <h5 class="text-center" ><b>Criar</b></h5>                        
                    }
                </div>
            </div>

            <div class="modal-body">
                <div class="container ">

                    <EditForm Model="@Model" OnSubmit="FormSubmit">                        
                        <div class="form-group row col-12">
                            <div class="col-8">
                                <label class="col-form-label fw-bold  ">Titulo</label>
                                <InputText class="form-control" @bind-Value="Model.Titulo" placeholder="@Serie?.Titulo"/>                                    
                            </div>
                            <div class="col-4">
                                <label class="col-form-label fw-bold col-4">Ano</label>
                                <InputNumber min="1895" max="2022" class="form-control" @bind-Value="Model.Ano" placeholder="Serie?.Ano" TValue="Int32"/>                                                
                            </div>            
                        </div>

                        <div class="form-group row col-12 d-flex justify-content-center">
                            <label class="col-form-label fw-bold">Genero</label>
                                <InputSelect class="form-control" @bind-Value="@Model.Genero">
                                    @foreach(var genero in Enum.GetValues(typeof(Generos)))
                                    {
                                        if(Serie.Genero.ToString() == genero.ToString())
                                        {
                                            <option value="@genero" selected>@genero</option>
                                        }
                                        else
                                        {
                                            <option value="@genero">@genero</option>    
                                        }
                    
                                    }            
                                </InputSelect>            
                        </div>

                        <div class="form-group row col-12">
                            <label class="col-form-label fw-bold">Descrição</label>
                            <InputTextArea style="height:150px" class="form-control " @bind-Value="Model.Descricao" placeholder="@Serie?.Descricao"/>
                        </div>
                        <DataAnnotationsValidator/>
                        <ValidationSummary/>
                    </EditForm>    

                 </div>
            </div>

            <div class="modal-footer ">  
                <div class="row col-12">
                    <div>
                        <button type="submit" @onclick=FormSubmit class="btn btn-primary">Salvar</button>                         
                        <button class="btn btn-secondary" @onclick=Close>Close</button>
                    </div>
                </div>    
            </div>
        </div>

    </div>
</div>


@if (ShowBackdrop)
{
    <div class="modal-backdrop fade show"></div>
}


@code {
    [Parameter]
    public Serie? Serie { get; set; }    

    [Parameter]
    public EventCallback<Serie> EditarSerie { get; set; }

    [Parameter]
    public EventCallback<Serie> AddSerie { get; set; }

    public Serie Model => Serie == null ? new Serie() : Serie; //Define Model para o EditForm
    public int Categoria { get; set; }
        
    public string ModalDisplay = "none;";
    public string ModalClass = " ";
    public bool ShowBackdrop = false;

    public void Open(int escolha)
    {
        ModalDisplay = "block;";
        ModalClass = "Show";
        ShowBackdrop = true;
        Categoria = escolha;
        StateHasChanged();              
    }

    public void Close()
    {
        ModalDisplay = "none";
        ModalClass = " ";
        ShowBackdrop = false;               
    }



    //FALTA CORRIGIR VALIDAÇÃO DO FORMULÁRIO

    private EditContext? editContext;

    protected override void OnInitialized()
    {
        editContext = new(ModalClass);        
    }

    
    public void FormSubmit()
    {
        if(editContext != null && editContext.Validate())
        {
            if(Categoria == 1)
            {
                EditarSerie.InvokeAsync(Serie);
            }
            else
            {
                AddSerie.InvokeAsync(Serie);
            }  
            Close();
        }
        else
        {
            Console.WriteLine("Erro na validação");
        }
        
    }
}